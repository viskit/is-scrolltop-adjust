!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.isScrolltopAdjust=t():e.isScrolltopAdjust=t()}(self,(function(){return(()=>{"use strict";var e={d:(t,o)=>{for(var r in o)e.o(o,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>n}),document.body.insertAdjacentHTML("afterbegin",'\n  <div id="is-scrolltop-aujust" style=" position:absolute;top:0;left:0;pointer-events:none;overflow-x:hidden;width:10px;height:10px;">\n    <div class="wrap" style="min-height:120%"></div>\n  </div>\n');let o=!1,r=!1;const n=()=>{if(o)return r;const e=document.querySelector("#is-scrolltop-aujust"),t=e.querySelector(".wrap");e.scrollTop=50;const n=e.scrollTop;return t.insertAdjacentHTML("beforebegin","<p>Test</p>"),r=e.scrollTop!==n,e.remove(),o=!0,r};return t})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pc1Njcm9sbHRvcEFkanVzdC93ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCJ3ZWJwYWNrOi8vaXNTY3JvbGx0b3BBZGp1c3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vaXNTY3JvbGx0b3BBZGp1c3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2lzU2Nyb2xsdG9wQWRqdXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vaXNTY3JvbGx0b3BBZGp1c3Qvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9pc1Njcm9sbHRvcEFkanVzdC8uL3NyYy9pbmRleC50cyJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJzZWxmIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJkb2N1bWVudCIsImJvZHkiLCJpbnNlcnRBZGphY2VudEhUTUwiLCJqdWRnZWQiLCJyZXN1bHQiLCJzY3JvbGwiLCJxdWVyeVNlbGVjdG9yIiwid3JhcCIsInNjcm9sbFRvcCIsInJlbW92ZSJdLCJtYXBwaW5ncyI6IkNBQUEsU0FBMkNBLEVBQU1DLEdBQzFCLGlCQUFaQyxTQUEwQyxpQkFBWEMsT0FDeENBLE9BQU9ELFFBQVVELElBQ1EsbUJBQVhHLFFBQXlCQSxPQUFPQyxJQUM5Q0QsT0FBTyxHQUFJSCxHQUNlLGlCQUFaQyxRQUNkQSxRQUEyQixrQkFBSUQsSUFFL0JELEVBQXdCLGtCQUFJQyxJQVI5QixDQVNHSyxNQUFNLFdBQ1QsTSxtQkNUQSxJQUFJQyxFQUFzQixDQ0ExQixFQUF3QixDQUFDTCxFQUFTTSxLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hELEVBQW9CRyxFQUFFRixFQUFZQyxLQUFTRixFQUFvQkcsRUFBRVIsRUFBU08sSUFDNUVFLE9BQU9DLGVBQWVWLEVBQVNPLEVBQUssQ0FBRUksWUFBWSxFQUFNQyxJQUFLTixFQUFXQyxNQ0ozRSxFQUF3QixDQUFDTSxFQUFLQyxJQUFVTCxPQUFPTSxVQUFVQyxlQUFlQyxLQUFLSixFQUFLQyxHQ0NsRixFQUF5QmQsSUFDSCxvQkFBWGtCLFFBQTBCQSxPQUFPQyxhQUMxQ1YsT0FBT0MsZUFBZVYsRUFBU2tCLE9BQU9DLFlBQWEsQ0FBRUMsTUFBTyxXQUU3RFgsT0FBT0MsZUFBZVYsRUFBUyxhQUFjLENBQUVvQixPQUFPLE0sbUNDTHZEQyxTQUFTQyxLQUFLQyxtQkFDWixhQUNBLDhNQU9GLElBQUlDLEdBQVMsRUFDVEMsR0FBUyxFQUViLE1BZ0JBLEVBaEIwQixLQUN4QixHQUFJRCxFQUNGLE9BQU9DLEVBR1QsTUFBTUMsRUFBU0wsU0FBU00sY0FBYyx3QkFDaENDLEVBQU9GLEVBQU9DLGNBQWMsU0FDbENELEVBQU9HLFVBQVksR0FDbkIsTUFBTUEsRUFBWUgsRUFBT0csVUFLekIsT0FKQUQsRUFBS0wsbUJBQW1CLGNBQWUsZUFDdkNFLEVBQVNDLEVBQU9HLFlBQWNBLEVBQzlCSCxFQUFPSSxTQUNQTixHQUFTLEVBQ0ZDLEciLCJmaWxlIjoiaW5kZXguYnVpbGQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKVxuXHRcdGRlZmluZShbXSwgZmFjdG9yeSk7XG5cdGVsc2UgaWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKVxuXHRcdGV4cG9ydHNbXCJpc1Njcm9sbHRvcEFkanVzdFwiXSA9IGZhY3RvcnkoKTtcblx0ZWxzZVxuXHRcdHJvb3RbXCJpc1Njcm9sbHRvcEFkanVzdFwiXSA9IGZhY3RvcnkoKTtcbn0pKHNlbGYsIGZ1bmN0aW9uKCkge1xucmV0dXJuICIsIi8vIFRoZSByZXF1aXJlIHNjb3BlXG52YXIgX193ZWJwYWNrX3JlcXVpcmVfXyA9IHt9O1xuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiZG9jdW1lbnQuYm9keS5pbnNlcnRBZGphY2VudEhUTUwoXG4gIFwiYWZ0ZXJiZWdpblwiLFxuICBgXG4gIDxkaXYgaWQ9XCJpcy1zY3JvbGx0b3AtYXVqdXN0XCIgc3R5bGU9XCIgcG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3BvaW50ZXItZXZlbnRzOm5vbmU7b3ZlcmZsb3cteDpoaWRkZW47d2lkdGg6MTBweDtoZWlnaHQ6MTBweDtcIj5cbiAgICA8ZGl2IGNsYXNzPVwid3JhcFwiIHN0eWxlPVwibWluLWhlaWdodDoxMjAlXCI+PC9kaXY+XG4gIDwvZGl2PlxuYFxuKTtcblxubGV0IGp1ZGdlZCA9IGZhbHNlO1xubGV0IHJlc3VsdCA9IGZhbHNlO1xuXG5jb25zdCBpc1Njcm9sbHRvcEFkanVzdCA9ICgpID0+IHtcbiAgaWYgKGp1ZGdlZCkge1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBjb25zdCBzY3JvbGwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2lzLXNjcm9sbHRvcC1hdWp1c3RcIik7XG4gIGNvbnN0IHdyYXAgPSBzY3JvbGwucXVlcnlTZWxlY3RvcihcIi53cmFwXCIpO1xuICBzY3JvbGwuc2Nyb2xsVG9wID0gNTA7XG4gIGNvbnN0IHNjcm9sbFRvcCA9IHNjcm9sbC5zY3JvbGxUb3A7XG4gIHdyYXAuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYmVmb3JlYmVnaW5cIiwgYDxwPlRlc3Q8L3A+YCk7XG4gIHJlc3VsdCA9IHNjcm9sbC5zY3JvbGxUb3AgIT09IHNjcm9sbFRvcDtcbiAgc2Nyb2xsLnJlbW92ZSgpO1xuICBqdWRnZWQgPSB0cnVlO1xuICByZXR1cm4gcmVzdWx0O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgaXNTY3JvbGx0b3BBZGp1c3Q7XG4iXSwic291cmNlUm9vdCI6IiJ9